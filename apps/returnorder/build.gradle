plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.coditory.integration-test' version '1.5.0'

    id "org.springframework.cloud.contract" version "4.0.0"
}
group = 'com.bilge.returnorder'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    //Contract Test Dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier:4.0.0'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-spec-groovy:4.0.0'

    //Test Containers
    implementation 'org.testcontainers:testcontainers'
    implementation 'org.testcontainers:junit-jupiter'
    implementation 'org.testcontainers:kafka'
    implementation 'org.springframework.boot:spring-boot-testcontainers'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

contracts {
    baseClassForTests = "com.bilge.returnorder.configuration.test.BaseKafkaProducerContractTest"
    contractsDslDir = file("src/integration/resources/contracts")
}

tasks.named('contractTest') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}

tasks.named('integrationTest') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}